{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppPartialState",
            "id": "interface-AppPartialState-1c7b7a45032cdd4ec81727a94ee1e4cf839a329674e10f7d75c7f50a8065a68b1acec633c1d0a66c7ed4a8650e1a84b60141edab3dba898ba75dc47fa795d4d4",
            "file": "src/app/state/app.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action, createReducer, on } from '@ngrx/store';\r\nimport { backdropClicked, categoriesObtained, menuButtonClicked, SecondaryToolbarActions, shoppingCartButtonClicked, userProfileObtained } from './app.actions';\r\nimport { UserProfile } from '../identity/models';\r\nimport { Categoria } from '@root/components/models';\r\nimport { ShoppingCartButtonClicked } from '@components/card/state/card.actions';\r\n\r\nexport const APP_STATE_KEY = 'app-state';\r\n\r\nexport interface AppState {\r\n    categories: Categoria[];\r\n    currentUserProfile?: UserProfile;\r\n    currentCategory?: Categoria;\r\n    isMenuOpened: boolean;\r\n    isShoppingCartOpened: boolean;\r\n    shoppingCartCount: number;\r\n}\r\n\r\nexport interface AppPartialState {\r\n    readonly [APP_STATE_KEY]: AppState\r\n}\r\n\r\nconst initialState: AppState = {\r\n    categories: [],\r\n    isMenuOpened: true,\r\n    isShoppingCartOpened: false,\r\n    shoppingCartCount: 0,\r\n};\r\n\r\nexport const appReducer = createReducer(\r\n    initialState,\r\n    on(categoriesObtained, (state, action) => ({\r\n        ...state,\r\n        categories: action.categorias\r\n    })),\r\n    on(menuButtonClicked, state => ({\r\n        ...state,\r\n        isMenuOpened: !state.isMenuOpened\r\n    })),\r\n    on(userProfileObtained, (state, action) =>({\r\n        ...state,\r\n        currentUserProfile: action.userProfile\r\n    })),\r\n    on(SecondaryToolbarActions.categoriaCargada, (state, action) => ({\r\n        ...state,\r\n        currentCategory: action.categoria\r\n    })),\r\n    on(shoppingCartButtonClicked, state => ({\r\n        ...state,\r\n        isShoppingCartOpened: !state.isShoppingCartOpened\r\n    })),\r\n    on(backdropClicked, state => ({\r\n        ...state,\r\n        isShoppingCartOpened: false\r\n    })),\r\n    on(ShoppingCartButtonClicked, state => ({\r\n        ...state,\r\n        shoppingCartCount: state.shoppingCartCount + 1,\r\n    })),\r\n);\r\n\r\nexport function reducer(state: AppState, action: Action) {\r\n    return appReducer(state, action);\r\n}",
            "properties": [
                {
                    "name": "APP_STATE_KEY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppState",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "AppState",
            "id": "interface-AppState-1c7b7a45032cdd4ec81727a94ee1e4cf839a329674e10f7d75c7f50a8065a68b1acec633c1d0a66c7ed4a8650e1a84b60141edab3dba898ba75dc47fa795d4d4",
            "file": "src/app/state/app.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action, createReducer, on } from '@ngrx/store';\r\nimport { backdropClicked, categoriesObtained, menuButtonClicked, SecondaryToolbarActions, shoppingCartButtonClicked, userProfileObtained } from './app.actions';\r\nimport { UserProfile } from '../identity/models';\r\nimport { Categoria } from '@root/components/models';\r\nimport { ShoppingCartButtonClicked } from '@components/card/state/card.actions';\r\n\r\nexport const APP_STATE_KEY = 'app-state';\r\n\r\nexport interface AppState {\r\n    categories: Categoria[];\r\n    currentUserProfile?: UserProfile;\r\n    currentCategory?: Categoria;\r\n    isMenuOpened: boolean;\r\n    isShoppingCartOpened: boolean;\r\n    shoppingCartCount: number;\r\n}\r\n\r\nexport interface AppPartialState {\r\n    readonly [APP_STATE_KEY]: AppState\r\n}\r\n\r\nconst initialState: AppState = {\r\n    categories: [],\r\n    isMenuOpened: true,\r\n    isShoppingCartOpened: false,\r\n    shoppingCartCount: 0,\r\n};\r\n\r\nexport const appReducer = createReducer(\r\n    initialState,\r\n    on(categoriesObtained, (state, action) => ({\r\n        ...state,\r\n        categories: action.categorias\r\n    })),\r\n    on(menuButtonClicked, state => ({\r\n        ...state,\r\n        isMenuOpened: !state.isMenuOpened\r\n    })),\r\n    on(userProfileObtained, (state, action) =>({\r\n        ...state,\r\n        currentUserProfile: action.userProfile\r\n    })),\r\n    on(SecondaryToolbarActions.categoriaCargada, (state, action) => ({\r\n        ...state,\r\n        currentCategory: action.categoria\r\n    })),\r\n    on(shoppingCartButtonClicked, state => ({\r\n        ...state,\r\n        isShoppingCartOpened: !state.isShoppingCartOpened\r\n    })),\r\n    on(backdropClicked, state => ({\r\n        ...state,\r\n        isShoppingCartOpened: false\r\n    })),\r\n    on(ShoppingCartButtonClicked, state => ({\r\n        ...state,\r\n        shoppingCartCount: state.shoppingCartCount + 1,\r\n    })),\r\n);\r\n\r\nexport function reducer(state: AppState, action: Action) {\r\n    return appReducer(state, action);\r\n}",
            "properties": [
                {
                    "name": "categories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Categoria[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "currentCategory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Categoria",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "currentUserProfile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserProfile",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isMenuOpened",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "isShoppingCartOpened",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "shoppingCartCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Button",
            "id": "interface-Button-6ec42a53b20951813606f3fd08c23564913a41eb9880ed05c4aac5dd8f36774617b4ce53b23e622ec3c52115b87427d228d261c2b385bee773391338a39d6a9e",
            "file": "src/components/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from \"@ngrx/store\";\r\n\r\nexport interface Button {\r\n    type: 'basic' | 'raised' | 'fab' | 'icon' | 'flat' | 'shopping';\r\n    label: string;\r\n    icon: string;\r\n    action: Action;\r\n}\r\n\r\nexport interface Toolbar {\r\n    id: string;\r\n    mainButton?: Button;\r\n    title?: string;\r\n    secondaryButton?: Button[];\r\n    toolbarConfig: ToolbarConfig;\r\n}\r\n\r\nexport interface ToolbarConfig {\r\n    isTitleSeparete: boolean;\r\n    isSecondaryToolbar: boolean;\r\n}\r\n\r\nexport interface Item {\r\n    id: string;\r\n    titulo: string;\r\n    descripcion: string;\r\n    precio: number;\r\n}\r\n\r\nexport interface CrearCategoria {\r\n    nombre: string;\r\n}\r\n\r\nexport interface Categoria {\r\n    id: string;\r\n    nombre: string;\r\n    items: Item[];\r\n}",
            "properties": [
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Action",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"basic\" | \"raised\" | \"fab\" | \"icon\" | \"flat\" | \"shopping\"",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Categoria",
            "id": "interface-Categoria-6ec42a53b20951813606f3fd08c23564913a41eb9880ed05c4aac5dd8f36774617b4ce53b23e622ec3c52115b87427d228d261c2b385bee773391338a39d6a9e",
            "file": "src/components/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from \"@ngrx/store\";\r\n\r\nexport interface Button {\r\n    type: 'basic' | 'raised' | 'fab' | 'icon' | 'flat' | 'shopping';\r\n    label: string;\r\n    icon: string;\r\n    action: Action;\r\n}\r\n\r\nexport interface Toolbar {\r\n    id: string;\r\n    mainButton?: Button;\r\n    title?: string;\r\n    secondaryButton?: Button[];\r\n    toolbarConfig: ToolbarConfig;\r\n}\r\n\r\nexport interface ToolbarConfig {\r\n    isTitleSeparete: boolean;\r\n    isSecondaryToolbar: boolean;\r\n}\r\n\r\nexport interface Item {\r\n    id: string;\r\n    titulo: string;\r\n    descripcion: string;\r\n    precio: number;\r\n}\r\n\r\nexport interface CrearCategoria {\r\n    nombre: string;\r\n}\r\n\r\nexport interface Categoria {\r\n    id: string;\r\n    nombre: string;\r\n    items: Item[];\r\n}",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item[]",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "CrearCategoria",
            "id": "interface-CrearCategoria-6ec42a53b20951813606f3fd08c23564913a41eb9880ed05c4aac5dd8f36774617b4ce53b23e622ec3c52115b87427d228d261c2b385bee773391338a39d6a9e",
            "file": "src/components/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from \"@ngrx/store\";\r\n\r\nexport interface Button {\r\n    type: 'basic' | 'raised' | 'fab' | 'icon' | 'flat' | 'shopping';\r\n    label: string;\r\n    icon: string;\r\n    action: Action;\r\n}\r\n\r\nexport interface Toolbar {\r\n    id: string;\r\n    mainButton?: Button;\r\n    title?: string;\r\n    secondaryButton?: Button[];\r\n    toolbarConfig: ToolbarConfig;\r\n}\r\n\r\nexport interface ToolbarConfig {\r\n    isTitleSeparete: boolean;\r\n    isSecondaryToolbar: boolean;\r\n}\r\n\r\nexport interface Item {\r\n    id: string;\r\n    titulo: string;\r\n    descripcion: string;\r\n    precio: number;\r\n}\r\n\r\nexport interface CrearCategoria {\r\n    nombre: string;\r\n}\r\n\r\nexport interface Categoria {\r\n    id: string;\r\n    nombre: string;\r\n    items: Item[];\r\n}",
            "properties": [
                {
                    "name": "nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "GridColumns",
            "id": "interface-GridColumns-368cd3ada653248e13a0ad0a9eb97397cae9b738ab8536ea2c8bddfae46a3135a31250377a3966e3fa8b088ed596949d1f82b558e26771be21bb93f2202d9442",
            "file": "src/components/list/ui/grid-cols.directive.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Directive, Input, OnInit } from \"@angular/core\";\r\nimport { MatGridList } from \"@angular/material/grid-list\";\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\n\r\nexport interface GridColumns {\r\n    xs: number;\r\n    sm: number;\r\n    md: number;\r\n    lg: number;\r\n    xl: number;\r\n}\r\n\r\n@Directive({\r\n    selector: '[grid-cols]'\r\n})\r\nexport class GridColsDirective implements OnInit {\r\n    private gridCols: GridColumns = {\r\n        xs: 1,\r\n        sm: 2,\r\n        md: 3,\r\n        lg: 4,\r\n        xl: 6,\r\n    }\r\n\r\n    public get cols(): GridColumns {\r\n        return this.gridCols;\r\n    }\r\n\r\n    @Input()\r\n    public set cols(map: GridColumns) {\r\n        if (map && ('object' === (typeof map))) {\r\n            this.gridCols = map;\r\n        }\r\n    }\r\n\r\n    public constructor(\r\n        private grid: MatGridList,\r\n        private breakpointObserver: BreakpointObserver\r\n    ) {\r\n        if (this.grid != null) {\r\n            this.grid.cols = this.gridCols.md\r\n        }\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (this.grid != null) {\r\n            this.grid.cols = this.gridCols.md\r\n        }\r\n        this.breakpointObserver.observe([\r\n            Breakpoints.XSmall,\r\n            Breakpoints.Small,\r\n            Breakpoints.Medium,\r\n            Breakpoints.Large,\r\n            Breakpoints.XLarge\r\n        ]).subscribe(result => {\r\n            if(result.breakpoints[Breakpoints.XSmall]){\r\n                this.gridCols.xs\r\n            }\r\n            if (result.breakpoints[Breakpoints.Small]) {\r\n                this.grid.cols = this.gridCols.sm;\r\n            }\r\n            if (result.breakpoints[Breakpoints.Medium]) {\r\n            this.grid.cols = this.gridCols.md;\r\n            }\r\n            if (result.breakpoints[Breakpoints.Large]) {\r\n            this.grid.cols = this.gridCols.lg;\r\n            }\r\n            if (result.breakpoints[Breakpoints.XLarge]) {\r\n            this.grid.cols = this.gridCols.xl;\r\n            }\r\n        });\r\n    }\r\n}",
            "properties": [
                {
                    "name": "lg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "md",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "sm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "xl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "xs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Item",
            "id": "interface-Item-6ec42a53b20951813606f3fd08c23564913a41eb9880ed05c4aac5dd8f36774617b4ce53b23e622ec3c52115b87427d228d261c2b385bee773391338a39d6a9e",
            "file": "src/components/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from \"@ngrx/store\";\r\n\r\nexport interface Button {\r\n    type: 'basic' | 'raised' | 'fab' | 'icon' | 'flat' | 'shopping';\r\n    label: string;\r\n    icon: string;\r\n    action: Action;\r\n}\r\n\r\nexport interface Toolbar {\r\n    id: string;\r\n    mainButton?: Button;\r\n    title?: string;\r\n    secondaryButton?: Button[];\r\n    toolbarConfig: ToolbarConfig;\r\n}\r\n\r\nexport interface ToolbarConfig {\r\n    isTitleSeparete: boolean;\r\n    isSecondaryToolbar: boolean;\r\n}\r\n\r\nexport interface Item {\r\n    id: string;\r\n    titulo: string;\r\n    descripcion: string;\r\n    precio: number;\r\n}\r\n\r\nexport interface CrearCategoria {\r\n    nombre: string;\r\n}\r\n\r\nexport interface Categoria {\r\n    id: string;\r\n    nombre: string;\r\n    items: Item[];\r\n}",
            "properties": [
                {
                    "name": "descripcion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "precio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "titulo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ShoppingCartPartialState",
            "id": "interface-ShoppingCartPartialState-337a21ef552ed52a8bd4c32ccd0cce0b2ad92ccdbb59e880ba2e63aac114029eaf1e31d2891879d43696b49a30be970cbcf9bb1d10d17165da51a2a19a855779",
            "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createEntityAdapter, EntityAdapter, EntityState } from \"@ngrx/entity\";\r\nimport { Action, createReducer, on } from \"@ngrx/store\";\r\nimport { ShoppingCartButtonClicked } from \"@root/components/card/state/card.actions\";\r\nimport { Item } from \"@root/components/models\";\r\n\r\nexport const SHOPPING_CART_FEATURE_KEY = 'shopping-cart';\r\n\r\nexport interface ShoppingCartState extends EntityState<Item>{\r\n    total: number\r\n}\r\n\r\nexport function selectById(a: Item): string {\r\n    return a.id;\r\n}\r\n\r\nexport function sortById(a: Item, b: Item): number {\r\n    return a.id.localeCompare(b.id);\r\n}\r\n\r\nexport const ShoppingCartAdapter: EntityAdapter<Item> = createEntityAdapter<Item>({\r\n    selectId: selectById,\r\n    sortComparer: sortById\r\n});\r\n\r\nexport interface ShoppingCartPartialState {\r\n    readonly [SHOPPING_CART_FEATURE_KEY]: ShoppingCartState\r\n}\r\n\r\nexport const initialState = ShoppingCartAdapter.getInitialState({\r\n    total: 0\r\n});\r\n\r\nconst reducer = createReducer(\r\n    initialState,\r\n    on(ShoppingCartButtonClicked, (state, action) => ({\r\n        ...ShoppingCartAdapter.addOne(action.item, state),\r\n        total: state.total + action.item.precio\r\n    }))\r\n)\r\n\r\nexport function shoppingCartReducer(state: ShoppingCartState, action: Action) {\r\n    return reducer(state, action)\r\n}",
            "properties": [
                {
                    "name": "SHOPPING_CART_FEATURE_KEY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ShoppingCartState",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ShoppingCartState",
            "id": "interface-ShoppingCartState-337a21ef552ed52a8bd4c32ccd0cce0b2ad92ccdbb59e880ba2e63aac114029eaf1e31d2891879d43696b49a30be970cbcf9bb1d10d17165da51a2a19a855779",
            "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createEntityAdapter, EntityAdapter, EntityState } from \"@ngrx/entity\";\r\nimport { Action, createReducer, on } from \"@ngrx/store\";\r\nimport { ShoppingCartButtonClicked } from \"@root/components/card/state/card.actions\";\r\nimport { Item } from \"@root/components/models\";\r\n\r\nexport const SHOPPING_CART_FEATURE_KEY = 'shopping-cart';\r\n\r\nexport interface ShoppingCartState extends EntityState<Item>{\r\n    total: number\r\n}\r\n\r\nexport function selectById(a: Item): string {\r\n    return a.id;\r\n}\r\n\r\nexport function sortById(a: Item, b: Item): number {\r\n    return a.id.localeCompare(b.id);\r\n}\r\n\r\nexport const ShoppingCartAdapter: EntityAdapter<Item> = createEntityAdapter<Item>({\r\n    selectId: selectById,\r\n    sortComparer: sortById\r\n});\r\n\r\nexport interface ShoppingCartPartialState {\r\n    readonly [SHOPPING_CART_FEATURE_KEY]: ShoppingCartState\r\n}\r\n\r\nexport const initialState = ShoppingCartAdapter.getInitialState({\r\n    total: 0\r\n});\r\n\r\nconst reducer = createReducer(\r\n    initialState,\r\n    on(ShoppingCartButtonClicked, (state, action) => ({\r\n        ...ShoppingCartAdapter.addOne(action.item, state),\r\n        total: state.total + action.item.precio\r\n    }))\r\n)\r\n\r\nexport function shoppingCartReducer(state: ShoppingCartState, action: Action) {\r\n    return reducer(state, action)\r\n}",
            "properties": [
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "EntityState"
            ]
        },
        {
            "name": "Toolbar",
            "id": "interface-Toolbar-6ec42a53b20951813606f3fd08c23564913a41eb9880ed05c4aac5dd8f36774617b4ce53b23e622ec3c52115b87427d228d261c2b385bee773391338a39d6a9e",
            "file": "src/components/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from \"@ngrx/store\";\r\n\r\nexport interface Button {\r\n    type: 'basic' | 'raised' | 'fab' | 'icon' | 'flat' | 'shopping';\r\n    label: string;\r\n    icon: string;\r\n    action: Action;\r\n}\r\n\r\nexport interface Toolbar {\r\n    id: string;\r\n    mainButton?: Button;\r\n    title?: string;\r\n    secondaryButton?: Button[];\r\n    toolbarConfig: ToolbarConfig;\r\n}\r\n\r\nexport interface ToolbarConfig {\r\n    isTitleSeparete: boolean;\r\n    isSecondaryToolbar: boolean;\r\n}\r\n\r\nexport interface Item {\r\n    id: string;\r\n    titulo: string;\r\n    descripcion: string;\r\n    precio: number;\r\n}\r\n\r\nexport interface CrearCategoria {\r\n    nombre: string;\r\n}\r\n\r\nexport interface Categoria {\r\n    id: string;\r\n    nombre: string;\r\n    items: Item[];\r\n}",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "mainButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Button",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "secondaryButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Button[]",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "toolbarConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToolbarConfig",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ToolbarConfig",
            "id": "interface-ToolbarConfig-6ec42a53b20951813606f3fd08c23564913a41eb9880ed05c4aac5dd8f36774617b4ce53b23e622ec3c52115b87427d228d261c2b385bee773391338a39d6a9e",
            "file": "src/components/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from \"@ngrx/store\";\r\n\r\nexport interface Button {\r\n    type: 'basic' | 'raised' | 'fab' | 'icon' | 'flat' | 'shopping';\r\n    label: string;\r\n    icon: string;\r\n    action: Action;\r\n}\r\n\r\nexport interface Toolbar {\r\n    id: string;\r\n    mainButton?: Button;\r\n    title?: string;\r\n    secondaryButton?: Button[];\r\n    toolbarConfig: ToolbarConfig;\r\n}\r\n\r\nexport interface ToolbarConfig {\r\n    isTitleSeparete: boolean;\r\n    isSecondaryToolbar: boolean;\r\n}\r\n\r\nexport interface Item {\r\n    id: string;\r\n    titulo: string;\r\n    descripcion: string;\r\n    precio: number;\r\n}\r\n\r\nexport interface CrearCategoria {\r\n    nombre: string;\r\n}\r\n\r\nexport interface Categoria {\r\n    id: string;\r\n    nombre: string;\r\n    items: Item[];\r\n}",
            "properties": [
                {
                    "name": "isSecondaryToolbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "isTitleSeparete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ToolbarPartialState",
            "id": "interface-ToolbarPartialState-aee381ac6501482b4afd8730db5fa21320c8437367c8b52d416747c140ef3f5b8b8eef7d48b8209d873d184bb6f40e8c63c66be10f988af43dc677c7c7723b5e",
            "file": "src/components/toolbar/state/toolbar.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { Action, createReducer, on } from '@ngrx/store';\r\nimport { Toolbar } from '@root/components/models';\r\nimport { RegisterToolbar } from './toolbar.actions';\r\n\r\nexport const TOOLBAR_FEATURE_KEY = 'toolbars';\r\n\r\nexport interface ToolbarState extends EntityState<Toolbar> {\r\n    \r\n}\r\n\r\nexport function selectById(a: Toolbar): string {\r\n    return a.id;\r\n}\r\n\r\nexport function sortById(a: Toolbar, b: Toolbar): number {\r\n    return a.id.localeCompare(b.id);\r\n}\r\n\r\nexport const toolbarAdapter: EntityAdapter<Toolbar> = createEntityAdapter<Toolbar> ({\r\n    selectId: selectById,\r\n    sortComparer: sortById\r\n});\r\n\r\nexport interface ToolbarPartialState {\r\n    readonly [TOOLBAR_FEATURE_KEY]: ToolbarState\r\n}\r\n\r\nexport const initialState = toolbarAdapter.getInitialState();\r\n\r\nconst reducer = createReducer(\r\n    initialState,\r\n    on(RegisterToolbar, (state, action) => ({\r\n        ...toolbarAdapter.addOne(action.toolbar, state)\r\n    }))\r\n);\r\n\r\nexport function toolbarReducer(state: ToolbarState, action: Action){\r\n    return reducer(state, action);\r\n}",
            "properties": [
                {
                    "name": "TOOLBAR_FEATURE_KEY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToolbarState",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ToolbarState",
            "id": "interface-ToolbarState-aee381ac6501482b4afd8730db5fa21320c8437367c8b52d416747c140ef3f5b8b8eef7d48b8209d873d184bb6f40e8c63c66be10f988af43dc677c7c7723b5e",
            "file": "src/components/toolbar/state/toolbar.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { Action, createReducer, on } from '@ngrx/store';\r\nimport { Toolbar } from '@root/components/models';\r\nimport { RegisterToolbar } from './toolbar.actions';\r\n\r\nexport const TOOLBAR_FEATURE_KEY = 'toolbars';\r\n\r\nexport interface ToolbarState extends EntityState<Toolbar> {\r\n    \r\n}\r\n\r\nexport function selectById(a: Toolbar): string {\r\n    return a.id;\r\n}\r\n\r\nexport function sortById(a: Toolbar, b: Toolbar): number {\r\n    return a.id.localeCompare(b.id);\r\n}\r\n\r\nexport const toolbarAdapter: EntityAdapter<Toolbar> = createEntityAdapter<Toolbar> ({\r\n    selectId: selectById,\r\n    sortComparer: sortById\r\n});\r\n\r\nexport interface ToolbarPartialState {\r\n    readonly [TOOLBAR_FEATURE_KEY]: ToolbarState\r\n}\r\n\r\nexport const initialState = toolbarAdapter.getInitialState();\r\n\r\nconst reducer = createReducer(\r\n    initialState,\r\n    on(RegisterToolbar, (state, action) => ({\r\n        ...toolbarAdapter.addOne(action.toolbar, state)\r\n    }))\r\n);\r\n\r\nexport function toolbarReducer(state: ToolbarState, action: Action){\r\n    return reducer(state, action);\r\n}",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": [
                "EntityState"
            ]
        },
        {
            "name": "UserProfile",
            "id": "interface-UserProfile-6a30b07bcbb426a286725a7578d56acee4ccc72cadc49eddc6e04c51fb5e396c3447635189e6772490713a4d2f4322a9ac64a31e766327a9a62a11ad0dd17149",
            "file": "src/app/identity/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserProfile {\r\n    id: string;\r\n    loginId: string;\r\n    nombre: string;\r\n    apellido: string;\r\n    email: string;\r\n}",
            "properties": [
                {
                    "name": "apellido",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "loginId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AppEffects",
            "id": "injectable-AppEffects-2b6ba2b60f73635b74ae503b6461f3be3ec09655627ab7e8b28b3769b5dd00f5ce6fb7e4a092873b75cd66b3545c088d941f45e1f78b73da4ca8b355ec00c7a1",
            "file": "src/app/state/app.effects.ts",
            "properties": [
                {
                    "name": "initCategorias$",
                    "defaultValue": "createEffect(() =>\r\n        this.actions.pipe(\r\n            ofType(InitApp),\r\n            switchMap(() => this.service.ObtenerCategorias()),\r\n            filter(categorias => !!categorias),\r\n            map(categorias => categoriesObtained({categorias}))\r\n            ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "registerSecondaryToolbar$",
                    "defaultValue": "createEffect(() =>\r\n        this.actions.pipe(\r\n            ofType(categoriesObtained),\r\n            filter(({categorias}) => !!categorias),\r\n            map(({categorias}) => {\r\n                let secondaryButtons: Button[] = [];\r\n                categorias.forEach(cat => {\r\n                    let button : Button = {\r\n                        type: 'fab',\r\n                        label: cat.nombre,\r\n                        icon: '',\r\n                        action: SecondaryToolbarActions.buttonClicked({categoriaId: cat.id})\r\n                      };\r\n                      secondaryButtons.push(button);\r\n                });\r\n                return RegisterToolbar({\r\n                    toolbar: {\r\n                        id: SECONDARY_TOOLBAR_ID,\r\n                        secondaryButton: secondaryButtons,\r\n                        toolbarConfig:{\r\n                          isSecondaryToolbar:true,\r\n                          isTitleSeparete: false\r\n                        }\r\n                      }\r\n                })\r\n            })\r\n        ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "secondaryButtonClicked$",
                    "defaultValue": "createEffect(() =>\r\n        this.actions.pipe(\r\n            ofType(SecondaryToolbarActions.buttonClicked),\r\n            switchMap(action => this.service.ObtenerCategoriaPorId(action.categoriaId)),\r\n            filter(categoria => !!categoria),\r\n            map((categoria) => SecondaryToolbarActions.categoriaCargada({categoria})),\r\n        ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "setFirstCategoryAsCurrent$",
                    "defaultValue": "createEffect(() =>\r\n        this.actions.pipe(\r\n            ofType(categoriesObtained),\r\n            filter(({categorias}) => !!categorias),\r\n            map(({categorias}) => SecondaryToolbarActions.buttonClicked({\r\n                categoriaId: categorias[0].id\r\n            }))\r\n        ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { AppService } from \"../app.service\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { categoriesObtained, InitApp, SecondaryToolbarActions } from './app.actions';\r\nimport { filter, map, switchMap } from \"rxjs\";\r\nimport { Button } from \"@root/components/models\";\r\nimport { RegisterToolbar } from \"@root/components/toolbar/state/toolbar.actions\";\r\nimport { SECONDARY_TOOLBAR_ID } from \"../app-constants\";\r\n\r\n@Injectable()\r\nexport class AppEffects {\r\n    public initCategorias$ = createEffect(() =>\r\n        this.actions.pipe(\r\n            ofType(InitApp),\r\n            switchMap(() => this.service.ObtenerCategorias()),\r\n            filter(categorias => !!categorias),\r\n            map(categorias => categoriesObtained({categorias}))\r\n            ));\r\n\r\n    public registerSecondaryToolbar$ = createEffect(() =>\r\n        this.actions.pipe(\r\n            ofType(categoriesObtained),\r\n            filter(({categorias}) => !!categorias),\r\n            map(({categorias}) => {\r\n                let secondaryButtons: Button[] = [];\r\n                categorias.forEach(cat => {\r\n                    let button : Button = {\r\n                        type: 'fab',\r\n                        label: cat.nombre,\r\n                        icon: '',\r\n                        action: SecondaryToolbarActions.buttonClicked({categoriaId: cat.id})\r\n                      };\r\n                      secondaryButtons.push(button);\r\n                });\r\n                return RegisterToolbar({\r\n                    toolbar: {\r\n                        id: SECONDARY_TOOLBAR_ID,\r\n                        secondaryButton: secondaryButtons,\r\n                        toolbarConfig:{\r\n                          isSecondaryToolbar:true,\r\n                          isTitleSeparete: false\r\n                        }\r\n                      }\r\n                })\r\n            })\r\n        ));\r\n\r\n    public setFirstCategoryAsCurrent$ = createEffect(() =>\r\n        this.actions.pipe(\r\n            ofType(categoriesObtained),\r\n            filter(({categorias}) => !!categorias),\r\n            map(({categorias}) => SecondaryToolbarActions.buttonClicked({\r\n                categoriaId: categorias[0].id\r\n            }))\r\n        ));\r\n\r\n    public secondaryButtonClicked$ = createEffect(() =>\r\n        this.actions.pipe(\r\n            ofType(SecondaryToolbarActions.buttonClicked),\r\n            switchMap(action => this.service.ObtenerCategoriaPorId(action.categoriaId)),\r\n            filter(categoria => !!categoria),\r\n            map((categoria) => SecondaryToolbarActions.categoriaCargada({categoria})),\r\n        ));\r\n\r\n    constructor(\r\n        private actions: Actions,\r\n        private readonly service: AppService){}\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "AppService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 63,
                "jsdoctags": [
                    {
                        "name": "actions",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "AppService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "AppService",
            "id": "injectable-AppService-43797bee4b8eb46e4f09d54ab977f32cec2320b86f412e56a15a82de5b038407802293288e18ef06be16cb1f7a9c3ca9471e2527b330ba09796b235199a811d2",
            "file": "src/app/app.service.ts",
            "properties": [
                {
                    "name": "currentCategory$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Categoria | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "currentCategoryItems$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Item[]>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "currentCategoryName$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "currentUserProfile$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<UserProfile | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isMenuOpened$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isShoppingCartOpened$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "shoppingCartCount$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "crearCategoria",
                    "args": [
                        {
                            "name": "nombre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "nombre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dispatch",
                    "args": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getToolbarById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ObtenerCategoriaPorId",
                    "args": [
                        {
                            "name": "categoriaId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "categoriaId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ObtenerCategorias",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { Action, Store } from \"@ngrx/store\";\r\nimport { selectAllToolbars } from \"@root/components/toolbar/state/toolbar.selectors\";\r\nimport { filter, map, Observable } from \"rxjs\";\r\nimport { getCurrentCategory, getCurrentCategoryItems, getCurrentCategoryName, getCurrentUserProfile, getMenuOpened, getShoppingCartCount, getShoppingCartOpened } from \"./state/app.selectors\";\r\nimport { WebApiService } from \"./web-api.service\";\r\nimport { UserProfile } from \"./identity/models\";\r\nimport { Categoria, Item } from \"@root/components/models\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AppService {\r\n    public isMenuOpened$: Observable<boolean>;\r\n    public isShoppingCartOpened$: Observable<boolean>\r\n    public currentUserProfile$: Observable<UserProfile | undefined>;\r\n    public currentCategory$: Observable<Categoria | undefined>;\r\n    public currentCategoryName$: Observable<string>;\r\n    public currentCategoryItems$: Observable<Item[]>;\r\n    public shoppingCartCount$: Observable<number>;\r\n\r\n    constructor(\r\n        private store: Store,\r\n        private webApi: WebApiService){\r\n        this.isMenuOpened$ = this.store.select(getMenuOpened);\r\n        this.isShoppingCartOpened$ = this.store.select(getShoppingCartOpened);\r\n        this.currentUserProfile$ = this.store.select(getCurrentUserProfile);\r\n        this.currentCategory$ = this.store.select(getCurrentCategory);\r\n        this.currentCategoryName$ = this.store.select(getCurrentCategoryName);\r\n        this.currentCategoryItems$ = this.store.select(getCurrentCategoryItems);\r\n        this.shoppingCartCount$ = this.store.select(getShoppingCartCount);\r\n    }\r\n\r\n    public dispatch(action: Action){\r\n        this.store.dispatch(action);\r\n    }\r\n\r\n    public getToolbarById(id: string) {\r\n        return this.store.select(selectAllToolbars).pipe(\r\n            map(toolbars => toolbars.find(t => t.id == id))\r\n        )\r\n    }\r\n\r\n    public crearCategoria(nombre: string){\r\n        this.webApi\r\n            .crearCategoria({nombre: nombre})\r\n            .pipe(filter(x => !!x))\r\n            .subscribe(categoria => console.log(categoria));\r\n    }\r\n    public ObtenerCategorias() {\r\n        return this.webApi\r\n            .obtenerCategorias()\r\n            .pipe(filter(x => !!x));\r\n    }\r\n    public ObtenerCategoriaPorId(categoriaId: string) {\r\n        return this.webApi\r\n            .obtenerCategoriaById(categoriaId)\r\n            .pipe(filter(x => !!x));\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "webApi",
                        "type": "WebApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "webApi",
                        "type": "WebApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ListService",
            "id": "injectable-ListService-53e99d93b4392908318cbb3fcb499e41a9beb02a0d55501742a8e07111f3cb84c4bed5770848878ccb0dc1d1e457f9868dfe1113e246aeebbc3ebc941ce54e83",
            "file": "src/components/list/services/list.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "dispatch",
                    "args": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { Action, Store } from \"@ngrx/store\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ListService {\r\n    constructor(private store: Store){}\r\n    \r\n    public dispatch(action: Action) {\r\n        this.store.dispatch(action);\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ShoppingCartService",
            "id": "injectable-ShoppingCartService-312c5b379fa95903e062eaba5518e0c153520e55781a86b2dac6bc148aebc1bcf92548cdcc31219f75794498d85bb7989647a31d470e3c201788897c54f8bd67",
            "file": "src/app/shopping-cart/shopping-cart.service.ts",
            "properties": [
                {
                    "name": "items$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Item[]>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, OnInit } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Item } from \"@root/components/models\";\r\nimport { Observable } from \"rxjs\";\r\nimport { selectAllItems } from \"./state/shopping-cart.selector\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ShoppingCartService implements OnInit {\r\n    public items$: Observable<Item[]>\r\n    constructor(private store: Store){}\r\n\r\n    public ngOnInit(): void {\r\n        this.items$ = this.store.select(selectAllItems)\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "WebApiService",
            "id": "injectable-WebApiService-7186bfc7f5cf48afddaa9fbb3b171c8a20e91ae720407c3b4bed03bdeb42a4805b165d50bfc87d2efd2da9cb45a87a30c34e08bdd2daaba9fdb964ea16463f5e",
            "file": "src/app/web-api.service.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "defaultValue": "'https://localhost:7014/'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "categoriasUrl",
                    "defaultValue": "`${this.baseUrl}Categorias/`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "itemsUrl",
                    "defaultValue": "`${this.baseUrl}Items/`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "crearCategoria",
                    "args": [
                        {
                            "name": "crearCategoria",
                            "type": "CrearCategoria",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Categoria>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "crearCategoria",
                            "type": "CrearCategoria",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteUser",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUserById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "obtenerCategoriaById",
                    "args": [
                        {
                            "name": "categoriaId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Categoria>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "categoriaId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "obtenerCategorias",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "updateUser",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Categoria, CrearCategoria } from '@root/components/models';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebApiService {\r\n    private baseUrl = 'https://localhost:7014/';\r\n    private itemsUrl =`${this.baseUrl}Items/`\r\n    private categoriasUrl = `${this.baseUrl}Categorias/`\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    // Categorias.\r\n    public crearCategoria(crearCategoria: CrearCategoria): Observable<Categoria> {\r\n        return this.http.post<Categoria>(this.categoriasUrl + 'CrearCategoria', crearCategoria);\r\n    }\r\n\r\n    public obtenerCategorias() {\r\n        return this.http.get<Categoria[]>(this.categoriasUrl + 'ObtenerCategorias');\r\n    }\r\n\r\n    public obtenerCategoriaById(categoriaId: string): Observable<Categoria> {\r\n        return this.http.get<Categoria>(this.categoriasUrl + 'ObtenerCategoriaPorId?categoriaId=' + categoriaId);\r\n    }\r\n\r\n    // Example endpoint: POST /api/users\r\n    createUser(user: any): Observable<any> {\r\n        const url = `${this.baseUrl}/users`;\r\n        return this.http.post(url, user);\r\n    }\r\n\r\n    // Example endpoint: GET /api/users/{id}\r\n    getUserById(id: number): Observable<any> {\r\n        const url = `${this.baseUrl}/users/${id}`;\r\n        return this.http.get(url);\r\n    }\r\n\r\n    // Example endpoint: PUT /api/users/{id}\r\n    updateUser(id: number, user: any): Observable<any> {\r\n        const url = `${this.baseUrl}/users/${id}`;\r\n        return this.http.put(url, user);\r\n    }\r\n\r\n    // Example endpoint: DELETE /api/users/{id}\r\n    deleteUser(id: number): Observable<any> {\r\n        const url = `${this.baseUrl}/users/${id}`;\r\n        return this.http.delete(url);\r\n    }\r\n\r\n    // Add more endpoints as needed for your specific API\r\n\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "GridColsDirective",
            "id": "directive-GridColsDirective-368cd3ada653248e13a0ad0a9eb97397cae9b738ab8536ea2c8bddfae46a3135a31250377a3966e3fa8b088ed596949d1f82b558e26771be21bb93f2202d9442",
            "file": "src/components/list/ui/grid-cols.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, OnInit } from \"@angular/core\";\r\nimport { MatGridList } from \"@angular/material/grid-list\";\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\n\r\nexport interface GridColumns {\r\n    xs: number;\r\n    sm: number;\r\n    md: number;\r\n    lg: number;\r\n    xl: number;\r\n}\r\n\r\n@Directive({\r\n    selector: '[grid-cols]'\r\n})\r\nexport class GridColsDirective implements OnInit {\r\n    private gridCols: GridColumns = {\r\n        xs: 1,\r\n        sm: 2,\r\n        md: 3,\r\n        lg: 4,\r\n        xl: 6,\r\n    }\r\n\r\n    public get cols(): GridColumns {\r\n        return this.gridCols;\r\n    }\r\n\r\n    @Input()\r\n    public set cols(map: GridColumns) {\r\n        if (map && ('object' === (typeof map))) {\r\n            this.gridCols = map;\r\n        }\r\n    }\r\n\r\n    public constructor(\r\n        private grid: MatGridList,\r\n        private breakpointObserver: BreakpointObserver\r\n    ) {\r\n        if (this.grid != null) {\r\n            this.grid.cols = this.gridCols.md\r\n        }\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (this.grid != null) {\r\n            this.grid.cols = this.gridCols.md\r\n        }\r\n        this.breakpointObserver.observe([\r\n            Breakpoints.XSmall,\r\n            Breakpoints.Small,\r\n            Breakpoints.Medium,\r\n            Breakpoints.Large,\r\n            Breakpoints.XLarge\r\n        ]).subscribe(result => {\r\n            if(result.breakpoints[Breakpoints.XSmall]){\r\n                this.gridCols.xs\r\n            }\r\n            if (result.breakpoints[Breakpoints.Small]) {\r\n                this.grid.cols = this.gridCols.sm;\r\n            }\r\n            if (result.breakpoints[Breakpoints.Medium]) {\r\n            this.grid.cols = this.gridCols.md;\r\n            }\r\n            if (result.breakpoints[Breakpoints.Large]) {\r\n            this.grid.cols = this.gridCols.lg;\r\n            }\r\n            if (result.breakpoints[Breakpoints.XLarge]) {\r\n            this.grid.cols = this.gridCols.xl;\r\n            }\r\n        });\r\n    }\r\n}",
            "selector": "[grid-cols]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "GridColumns",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "gridCols",
                    "defaultValue": "{\r\n        xs: 1,\r\n        sm: 2,\r\n        md: 3,\r\n        lg: 4,\r\n        xl: 6,\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridColumns",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "grid",
                        "type": "MatGridList",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "modifierKind": [
                    125
                ],
                "jsdoctags": [
                    {
                        "name": "grid",
                        "type": "MatGridList",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "cols": {
                    "name": "cols",
                    "setSignature": {
                        "name": "cols",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "map",
                                "type": "GridColumns",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 30,
                        "jsdoctags": [
                            {
                                "name": "map",
                                "type": "GridColumns",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "cols",
                        "type": "",
                        "returnType": "GridColumns",
                        "line": 25
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-333f086294d966ada2430d1f731c4c9a10aff84a1bc1e7fb87451d1ef11427977c04cff69ff3bd5db8e2e8d373a98a63aa3e0effc45cb7f8798b51584ee5b96b",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUserProfile$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<UserProfile | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "data$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Item[]>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isAdmin",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isMenuOpened$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isShoppingCartOpened$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "listTitle$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "mainToolbar$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Toolbar | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "secondaryToolbar$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Toolbar | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onBackdropClicked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from './app.service';\r\nimport { RegisterToolbar } from '@root/components/toolbar/state/toolbar.actions';\r\nimport { backdropClicked, InitApp, menuButtonClicked, profileButtonClicked, searchButtonClicked, shoppingCartButtonClicked, userProfileObtained } from './state/app.actions';\r\nimport { Observable } from 'rxjs';\r\nimport { Item, Toolbar } from '@root/components/models';\r\nimport { UserProfile } from './identity/models';\r\nimport { MAIN_TOOLBAR_ID, SECONDARY_TOOLBAR_ID } from './app-constants';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss'\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public mainToolbar$: Observable<Toolbar | undefined>;\r\n  public secondaryToolbar$: Observable<Toolbar | undefined>;\r\n  public isMenuOpened$: Observable<boolean>;\r\n  public isShoppingCartOpened$: Observable<boolean>;\r\n  public currentUserProfile$: Observable<UserProfile | undefined>;\r\n\r\n  public isAdmin: boolean = true;\r\n\r\n  public data$: Observable<Item[]>;\r\n  public listTitle$: Observable<string>;\r\n\r\n  constructor(private service: AppService) {\r\n    this.service.dispatch(InitApp());\r\n    this.service.dispatch(userProfileObtained({\r\n      userProfile: {\r\n        id: '1',\r\n        loginId: 'Zaky',\r\n        nombre: 'Iñaki',\r\n        apellido: 'Garro',\r\n        email: 'email@email.com'\r\n      }\r\n    }))\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.mainToolbar$ = this.service.getToolbarById(MAIN_TOOLBAR_ID);\r\n    this.secondaryToolbar$ = this.service.getToolbarById(SECONDARY_TOOLBAR_ID);\r\n    this.isMenuOpened$ = this.service.isMenuOpened$;\r\n    this.isShoppingCartOpened$ = this.service.isShoppingCartOpened$\r\n    this.currentUserProfile$ = this.service.currentUserProfile$;\r\n    this.data$ = this.service.currentCategoryItems$;\r\n    this.listTitle$ = this.service.currentCategoryName$;\r\n    this.service.dispatch(RegisterToolbar({\r\n      toolbar: {\r\n        id: MAIN_TOOLBAR_ID,\r\n        mainButton: {\r\n          type: 'icon',\r\n          icon: 'menu',\r\n          label: '',\r\n          action:  menuButtonClicked()\r\n        },\r\n        title: 'Yoru Store',\r\n        secondaryButton: [\r\n          {\r\n            type: 'basic',\r\n            icon: 'search',\r\n            label: 'Buscar',\r\n            action: searchButtonClicked()\r\n          },\r\n          {\r\n            type: 'shopping',\r\n            icon: 'shopping_cart',\r\n            label: '',\r\n            action: shoppingCartButtonClicked()\r\n          },\r\n          {\r\n            type: 'icon',\r\n            icon: 'account_circle',\r\n            label: '',\r\n            action: profileButtonClicked()\r\n          }\r\n        ],\r\n        toolbarConfig: {\r\n          isTitleSeparete: true,\r\n          isSecondaryToolbar: false\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  public onBackdropClicked() {\r\n    this.service.dispatch(backdropClicked())\r\n  }\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "AppService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "AppService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<header>\r\n\t@if (mainToolbar$ | async; as mainToolbar) {\r\n\t\t<toolbar-feature [toolbar]=\"mainToolbar\" />\r\n\t}\r\n\t@if (isMenuOpened$ | async) {\r\n\t\t@if (secondaryToolbar$ | async; as secondaryToolbar) {\r\n\t\t\t<toolbar-feature [toolbar]=\"secondaryToolbar\" />\r\n\t\t}\r\n\t}\r\n</header>\r\n<main>\r\n\t<mat-drawer-container (backdropClick)=\"onBackdropClicked()\">\r\n\t\t<mat-drawer\r\n\t\t\tmode=\"over\"\r\n\t\t\t[opened]=\"isShoppingCartOpened$ | async\"\r\n\t\t\tposition=\"end\"\r\n\t\t>\r\n\t\t\t<shopping-cart-ui />\r\n\t\t</mat-drawer>\r\n\t\t<mat-drawer-content>\r\n\t\t\t<list-feature\r\n\t\t\t\t[id]=\"'app-list'\"\r\n\t\t\t\t[titulo]=\"listTitle$\"\r\n\t\t\t\t[data$]=\"data$\"\r\n\t\t\t/>\r\n\t\t</mat-drawer-content>\r\n\t</mat-drawer-container>\r\n</main>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-b5665e0dfa82505ec7d3a913bdf29927657be0c7d4cd4d92f183415fe503f197499471b5135e2eef01c009494aa8fc344ceed6dc7d34550692be6f08686aefc1",
            "file": "src/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "Action",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "\"primary\" | \"secondary\" | \"tertiary\"",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"basic\" | \"raised\" | \"icon\" | \"fab\" | \"flat\" | \"shopping\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionEmmiter",
                    "defaultValue": "new EventEmitter<Action>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { BehaviorSubject, filter, map, Observable, Subject } from \"rxjs\";\r\n\r\n@Component({\r\n    selector: \"app-button\",\r\n    templateUrl: \"./button.component.html\",\r\n    styleUrl: \"./button.component.scss\"\r\n})\r\nexport class ButtonComponent\r\n{\r\n    public destroy$ = new Subject<void>();\r\n    @Input()\r\n    public type: \"basic\" | \"raised\" | \"icon\" | \"fab\" | \"flat\" | \"shopping\";\r\n\r\n    @Input()\r\n    public label: string;\r\n\r\n    @Input()\r\n    public icon: string;\r\n\r\n    @Input()\r\n    public action: Action;\r\n\r\n    @Input()\r\n    public color: 'primary' | 'secondary' | 'tertiary' = 'primary';\r\n\r\n    @Output()\r\n    public actionEmmiter = new EventEmitter<Action>();\r\n}",
            "styleUrl": "./button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@switch (type) {\r\n\t@case (\"raised\") {\r\n\t\t<button\r\n\t\t\tmat-raised-button\r\n\t\t\tclass=\"raised-button\"\r\n\t\t\t(click)=\"this.actionEmmiter.emit(this.action)\"\r\n\t\t>\r\n\t\t\t@if (label) {\r\n\t\t\t\t<span>{{ label }}</span>\r\n\t\t\t}\r\n\t\t\t@if (icon) {\r\n\t\t\t\t<mat-icon>{{ icon }}</mat-icon>\r\n\t\t\t}\r\n\t\t</button>\r\n\t}\r\n\t@case (\"flat\") {\r\n\t\t<button\r\n\t\t\tmat-flat-button\r\n\t\t\t(click)=\"this.actionEmmiter.emit(this.action)\"\r\n\t\t>\r\n\t\t\t@if (label) {\r\n\t\t\t\t<span>{{ label }}</span>\r\n\t\t\t}\r\n\t\t\t@if (icon) {\r\n\t\t\t\t<mat-icon>{{ icon }}</mat-icon>\r\n\t\t\t}\r\n\t\t</button>\r\n\t}\r\n\t@case (\"icon\") {\r\n\t\t<button\r\n\t\t\tmat-icon-button\r\n\t\t\t(click)=\"this.actionEmmiter.emit(this.action)\"\r\n\t\t>\r\n\t\t\t@if (icon) {\r\n\t\t\t\t<mat-icon>{{ icon }}</mat-icon>\r\n\t\t\t}\r\n\t\t</button>\r\n\t}\r\n\t@case (\"fab\") {\r\n\t\t<button\r\n\t\t\tmat-fab\r\n\t\t\textended=\"true\"\r\n\t\t\t(click)=\"this.actionEmmiter.emit(this.action)\"\r\n\t\t\tcolor=\"primary\"\r\n\t\t>\r\n\t\t\t@if (icon) {\r\n\t\t\t\t<mat-icon>{{ icon }}</mat-icon>\r\n\t\t\t}\r\n\t\t\t<span>{{ label }}</span>\r\n\t\t</button>\r\n\t}\r\n\r\n\t@default {\r\n\t\t<button\r\n\t\t\tmat-button\r\n\t\t\tclass=\"basic-button\"\r\n\t\t\t(click)=\"this.actionEmmiter.emit(this.action)\"\r\n\t\t>\r\n\t\t\t@if (label) {\r\n\t\t\t\t<span>{{ label }}</span>\r\n\t\t\t}\r\n\t\t\t@if (icon) {\r\n\t\t\t\t<mat-icon>{{ icon }}</mat-icon>\r\n\t\t\t}\r\n\t\t</button>\r\n\t}\r\n}\r\n"
        },
        {
            "name": "ButtonFeatureComponent",
            "id": "component-ButtonFeatureComponent-6441c68014ada325fdc38e88703209d0a930eb464b8e8302cb5ffab8162d5dcf39d8e8fe7d5ed1bfcd769817fbb814fb7d9ed98f3140ba8318733541d1fba624",
            "file": "src/components/button/feature/button-feature.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "button-feature",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "button-feature.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "button",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Button",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "badgeHidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "shoppingBadgeCount$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "dispatch",
                    "args": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Action, Store } from \"@ngrx/store\";\r\nimport { getShoppingCartCount } from \"@root/app/state/app.selectors\";\r\nimport { Button } from \"@root/components/models\";\r\nimport { Observable, Subject, takeUntil } from \"rxjs\";\r\n\r\n@Component({\r\n    selector: 'button-feature',\r\n    templateUrl: 'button-feature.component.html'\r\n})\r\nexport class ButtonFeatureComponent implements OnInit, OnDestroy {\r\n    private destroy$ = new Subject<void>();\r\n    public shoppingBadgeCount$: Observable<number>;\r\n    public badgeHidden: boolean = false;\r\n\r\n    @Input()\r\n    public button: Button;\r\n\r\n    constructor(private store: Store){}\r\n\r\n    public ngOnInit(): void {\r\n        this.shoppingBadgeCount$ = this.store.select(getShoppingCartCount);\r\n        this.shoppingBadgeCount$.pipe(takeUntil(this.destroy$)).subscribe(count => this.badgeHidden = count <= 0);\r\n    }\r\n    public ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    public dispatch(action: Action) {\r\n        this.store.dispatch(action);\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "@if (button.type == \"shopping\") {\r\n\t<app-button\r\n\t\t[matBadge]=\"shoppingBadgeCount$ | async\"\r\n\t\t[matBadgeHidden]=\"badgeHidden\"\r\n\t\t[type]=\"'icon'\"\r\n\t\t[label]=\"button.label\"\r\n\t\t[icon]=\"button.icon\"\r\n\t\t[action]=\"button.action\"\r\n\t\t(actionEmmiter)=\"this.dispatch($event)\"\r\n\t/>\r\n} @else {\r\n\t<app-button\r\n\t\t[type]=\"button.type\"\r\n\t\t[label]=\"button.label\"\r\n\t\t[icon]=\"button.icon\"\r\n\t\t[action]=\"button.action\"\r\n\t\t(actionEmmiter)=\"this.dispatch($event)\"\r\n\t/>\r\n}\r\n"
        },
        {
            "name": "CardFeatureComponent",
            "id": "component-CardFeatureComponent-0d6ccfc5ea3a0259132403de4fb022776599f6e103716265d06ebc7e5100c8ba5f034c03e912d50017e5a1445353374cbead43d4f0e1b01426f7fe3b5b436988",
            "file": "src/components/card/feature/card-feature/card-feature.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-feature",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card-feature.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Item",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "dispatch",
                    "args": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\nimport { Action, Store } from \"@ngrx/store\";\r\nimport { Item } from \"@components/models\";\r\n\r\n@Component({\r\n    selector: 'app-card-feature',\r\n    templateUrl: './card-feature.component.html',\r\n    styleUrl: './card-feature.component.scss'\r\n})\r\nexport class CardFeatureComponent {\r\n    @Input()\r\n    public item: Item;\r\n\r\n    constructor(private store: Store){}\r\n\r\n    public dispatch(action: Action){\r\n        this.store.dispatch(action);\r\n    }\r\n}",
            "styleUrl": "./card-feature.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<app-card-ui\r\n\t[id]=\"item.id\"\r\n\t[titulo]=\"item.titulo\"\r\n\t[descripcion]=\"item.descripcion\"\r\n\t[precio]=\"item.precio\"\r\n\t(actionEmitter)=\"this.dispatch($event)\"\r\n/>\r\n"
        },
        {
            "name": "CardUiComponent",
            "id": "component-CardUiComponent-e8f01553a2c2698622145d61473f7de883a54b10defab9520f6db22e8db18d12b6dddef0a78d8d0f3ee6491cc6be6e46aa8b9a8b26d521b0a26f7e378a6985e0",
            "file": "src/components/card/ui/card-ui/card-ui.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-ui",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card-ui.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "descripcion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "precio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "side",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "titulo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionEmitter",
                    "defaultValue": "new EventEmitter<Action>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "detailsButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Button",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "shoppingCartButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Button",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Button } from '@components/models';\r\nimport { DetailsButtonClicked, ShoppingCartButtonClicked } from '../../state/card.actions';\r\nimport { Action } from '@ngrx/store';\r\n\r\n@Component({\r\n    selector: 'app-card-ui',\r\n    templateUrl: './card-ui.component.html',\r\n    styleUrl: './card-ui.component.scss'\r\n})\r\nexport class CardUiComponent implements OnInit {\r\n    @Input()\r\n    public side: boolean;\r\n\r\n    @Input()\r\n    public id: string;\r\n\r\n    @Input()\r\n    public titulo: string;\r\n\r\n    @Input()\r\n    public descripcion: string;\r\n\r\n    @Input()\r\n    public precio: number;\r\n\r\n    @Output()\r\n    public actionEmitter = new EventEmitter<Action>();\r\n\r\n    public shoppingCartButton: Button;\r\n    public detailsButton: Button;\r\n\r\n    public ngOnInit(): void {\r\n        this.shoppingCartButton = {\r\n            type: 'raised',\r\n            label: 'Agregar al carrito',\r\n            icon: 'shopping_cart',\r\n            action: ShoppingCartButtonClicked({item: {\r\n                id: this.id,\r\n                titulo: this.titulo,\r\n                descripcion: this.descripcion,\r\n                precio: this.precio\r\n            }})\r\n        };\r\n\r\n        this.detailsButton = {\r\n            type: 'basic',\r\n            label: 'Detalles',\r\n            icon: '',\r\n            action: DetailsButtonClicked({itemId: this.id})\r\n        }\r\n    }\r\n}",
            "styleUrl": "./card-ui.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card>\r\n\t<mat-card-header>\r\n\t\t<mat-card-title-group class=\"card-title-group\">\r\n\t\t\t<img\r\n\t\t\t\tmat-card-image\r\n\t\t\t\tsrc=\"assets\\medias\\medias-negras-vlack.jpg\"\r\n\t\t\t\talt=\"medias vlack\"\r\n\t\t\t/>\r\n\t\t\t<mat-card-title>\r\n\t\t\t\t{{ titulo }}\r\n\t\t\t</mat-card-title>\r\n\t\t</mat-card-title-group>\r\n\t</mat-card-header>\r\n\t<mat-card-content>\r\n\t\t<p>{{ descripcion }}</p>\r\n\t</mat-card-content>\r\n\t<mat-card-footer>\r\n\t\t<span>{{ precio | currency }}</span>\r\n\t</mat-card-footer>\r\n\t<mat-card-actions>\r\n\t\t<button-feature [button]=\"shoppingCartButton\" />\r\n\t\t<button-feature [button]=\"detailsButton\" />\r\n\t</mat-card-actions>\r\n</mat-card>\r\n"
        },
        {
            "name": "ListFeatureComponent",
            "id": "component-ListFeatureComponent-988a45d445c7d0ae687b226a61be5962d1c5c84ce3d758edeafc926d356a51945b5d6f94b0284fbff8e874158ba63b0972932fdbbf511de2ccaf9301d74476df",
            "file": "src/components/list/feature/list-feature/list-feature.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "list-feature",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list-feature.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Observable<Item[]>",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "titulo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Observable<string>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "dispatch",
                    "args": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\nimport { ListService } from \"../../services/list.service\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Item } from \"@components/models\";\r\n\r\n@Component({\r\n    selector: 'list-feature',\r\n    templateUrl: './list-feature.component.html'\r\n})\r\nexport class ListFeatureComponent {\r\n    @Input()\r\n    public id: string;\r\n\r\n    @Input()\r\n    public titulo: Observable<string>;\r\n\r\n    @Input()\r\n    public data$: Observable<Item[]>;\r\n    constructor(private listService: ListService){}\r\n\r\n    public dispatch(action: Action) {\r\n        this.listService.dispatch(action);\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "listService",
                        "type": "ListService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "listService",
                        "type": "ListService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<list-ui\r\n\t[id]=\"id\"\r\n\t[title]=\"titulo\"\r\n\t[data$]=\"data$\"\r\n/>\r\n"
        },
        {
            "name": "ListUiComponent",
            "id": "component-ListUiComponent-f9a3aafa3c3701b90138cfec7053ee0e31f9c2295473fca7db699b0e486942bb6bfeb0c31d4a24cf22f0a2a0b52ae580400a7b6eb4d183f990058da5e629121e",
            "file": "src/components/list/ui/list-ui/list-ui.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "list-ui",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list-ui.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Observable<Item[]>",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Observable<string>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\nimport { Item } from \"@root/components/models\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Component({\r\n    selector: 'list-ui',\r\n    templateUrl: './list-ui.component.html',\r\n    styleUrl: './list-ui.component.scss',\r\n})\r\nexport class ListUiComponent {\r\n    @Input()\r\n    public id: string;\r\n\r\n    @Input()\r\n    public title: Observable<string>;\r\n\r\n    @Input()\r\n    public data$: Observable<Item[]>;\r\n}",
            "styleUrl": "./list-ui.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@if (title | async; as titulo) {\r\n\t<h2 class=\"list-title\">{{ titulo }}</h2>\r\n}\r\n@if (data$ | async; as data) {\r\n\t<mat-grid-list\r\n\t\tgrid-cols\r\n\t\tgutterSize=\"5px\"\r\n\t\trowHeight=\"465px\"\r\n\t>\r\n\t\t@for (item of data; track $index) {\r\n\t\t\t<mat-grid-tile>\r\n\t\t\t\t<app-card-feature [item]=\"item\" />\r\n\t\t\t</mat-grid-tile>\r\n\t\t}\r\n\t</mat-grid-list>\r\n}\r\n"
        },
        {
            "name": "ShoppingCartFeatureComponent",
            "id": "component-ShoppingCartFeatureComponent-fd7aa96617af016909cb3cc9efc5d8800b2de3c001d0e7012f81aa837ff31266d8916ba18d8893edaed02f13b22fe691fb3316b7ca26ec1fda14accf89bf2137",
            "file": "src/app/shopping-cart/feature/shopping-cart-feature.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "shopping-cart-feature",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "shopping-cart-feature.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Item[]>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ShoppingCartService } from \"../shopping-cart.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Item } from \"@root/components/models\";\r\n\r\n@Component({\r\n    selector: 'shopping-cart-feature',\r\n    templateUrl: 'shopping-cart-feature.component.html'\r\n})\r\nexport class ShoppingCartFeatureComponent implements OnInit {\r\n    public items$: Observable<Item[]>;\r\n    \r\n    constructor(private service: ShoppingCartService){}\r\n    \r\n    public ngOnInit(): void {\r\n        this.items$ = this.service.items$;\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ShoppingCartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ShoppingCartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "@if (items$ | async; as items) {\r\n\t@for (item of items; track $index) {\r\n\t\t<mat-card>\r\n\t\t\t<mat-card-header> </mat-card-header>\r\n\t\t</mat-card>\r\n\t}\r\n}\r\n"
        },
        {
            "name": "ShoppingCartUiComponent",
            "id": "component-ShoppingCartUiComponent-48457901e4f9d65e10a2e8e1865107a0b7c1f5cdefc8e2d39887b4343d129fbad9e843f92c06f4b936a60643aa976781b226418c266506f3ed97c7828a51b2dc",
            "file": "src/app/shopping-cart/ui/shopping-cart-ui.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "shopping-cart-ui",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "shopping-cart-ui.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "montoTotal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { selectMontoTotal } from \"../state/shopping-cart.selector\";\r\n\r\n@Component({\r\n    selector: 'shopping-cart-ui',\r\n    templateUrl: 'shopping-cart-ui.component.html',\r\n    styleUrl: 'shopping-cart-ui.component.scss',\r\n})\r\nexport class ShoppingCartUiComponent implements OnInit{\r\n    public montoTotal: Observable<number>;\r\n\r\n    constructor(private store: Store){}\r\n    \r\n    public ngOnInit(): void {\r\n        this.montoTotal = this.store.select(selectMontoTotal);\r\n    }\r\n}",
            "styleUrl": "shopping-cart-ui.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<h3>EL MONTO TOTAL ES: {{ montoTotal | async }}</h3>\r\n"
        },
        {
            "name": "ToolbarFeatureComponent",
            "id": "component-ToolbarFeatureComponent-4947cf93873f7a874c97e29ef8e32d8fb3aeec8bc5efa9425a7fe560623caa77bade3ec52f2d92b63ebdb6b25382dd7c92ffe05535d0134ecb2320ef94b8614c",
            "file": "src/components/toolbar/feature/toolbar-feature.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "toolbar-feature",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./toolbar-feature.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "toolbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Toolbar",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "dispatch",
                    "args": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\nimport { Action, Store } from \"@ngrx/store\";\r\nimport { Toolbar } from \"@root/components/models\";\r\n\r\n@Component({\r\n    selector: 'toolbar-feature',\r\n    templateUrl: './toolbar-feature.component.html'\r\n})\r\nexport class ToolbarFeatureComponent {\r\n    @Input()\r\n    public toolbar: Toolbar;\r\n\r\n    constructor(private store: Store) {}\r\n\r\n    public dispatch(action: Action) {\r\n        this.store.dispatch(action);\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<app-toolbar-ui\r\n\t[id]=\"toolbar.id\"\r\n\t[mainButton]=\"toolbar.mainButton\"\r\n\t[title]=\"toolbar.title\"\r\n\t[secondaryButtons]=\"toolbar.secondaryButton\"\r\n\t[toolbarConfig]=\"toolbar.toolbarConfig\"\r\n\t(actionEmitter)=\"this.dispatch($event)\"\r\n/>\r\n"
        },
        {
            "name": "ToolbarUiComponent",
            "id": "component-ToolbarUiComponent-cd8074984843fcecf080af27f9f9cc1f64ab1b2b8bb1942140ba80701ec93d1095b79cafb88b4b0c41d05618bdc767e40bd917d7d88481268da22a3d0e653e49",
            "file": "src/components/toolbar/ui/toolbar-ui/toolbar-ui.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toolbar-ui",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./toolbar-ui.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "mainButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Button | undefined",
                    "decorators": []
                },
                {
                    "name": "secondaryButtons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Button[] | undefined",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "toolbarConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ToolbarConfig",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionEmitter",
                    "defaultValue": "new EventEmitter<Action>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Button, ToolbarConfig } from \"@root/components/models\";\r\n\r\n@Component({\r\n    selector: 'app-toolbar-ui',\r\n    templateUrl: './toolbar-ui.component.html',\r\n    styleUrl: './toolbar-ui.component.scss'\r\n})\r\nexport class ToolbarUiComponent {\r\n    @Input()\r\n    public id: string;\r\n    \r\n    @Input()\r\n    public mainButton: Button | undefined;\r\n\r\n    @Input()\r\n    public title: string | undefined;\r\n\r\n    @Input()\r\n    public secondaryButtons: Button[] | undefined;\r\n\r\n    @Input()\r\n    public toolbarConfig: ToolbarConfig;\r\n\r\n    @Output()\r\n    public actionEmitter = new EventEmitter<Action>();\r\n}",
            "styleUrl": "./toolbar-ui.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@if (!toolbarConfig.isSecondaryToolbar) {\r\n\t<mat-toolbar\r\n\t\t[id]=\"id\"\r\n\t\tclass=\"toolbar\"\r\n\t>\r\n\t\t@if (mainButton) {\r\n\t\t\t<button-feature [button]=\"mainButton\" />\r\n\t\t}\r\n\t\t@if (toolbarConfig.isTitleSeparete) {\r\n\t\t\t<span class=\"spacer\"></span>\r\n\t\t}\r\n\t\t@if (title) {\r\n\t\t\t<strong>{{ title }}</strong>\r\n\t\t}\r\n\t\t@if (toolbarConfig.isTitleSeparete) {\r\n\t\t\t<span class=\"spacer\"></span>\r\n\t\t} @else {\r\n\t\t\t<span class=\"secondary-spacer\"></span>\r\n\t\t}\r\n\t\t@if (secondaryButtons) {\r\n\t\t\t@for (button of secondaryButtons; track $index) {\r\n\t\t\t\t<button-feature [button]=\"button\" />\r\n\t\t\t}\r\n\t\t}\r\n\t</mat-toolbar>\r\n} @else {\r\n\t<mat-toolbar\r\n\t\t[id]=\"id\"\r\n\t\tclass=\"toolbar secondary-toolbar\"\r\n\t>\r\n\t\t@if (secondaryButtons) {\r\n\t\t\t@for (button of secondaryButtons; track $index) {\r\n\t\t\t\t<button-feature [button]=\"button\" />\r\n\t\t\t}\r\n\t\t}\r\n\t</mat-toolbar>\r\n}\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppButtonModule",
            "id": "module-AppButtonModule-2b93ace43c3f614cf3cc7e7b0defc8b7676052320f968f0be819b2d24d28452963b50dc427567e04951e5fa4016bf954da8d63e702e838f7b6260d0b2c8ba6b5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/components/button/button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { ButtonComponent } from \"./button.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatBadgeModule } from \"@angular/material/badge\";\r\nimport { ButtonFeatureComponent } from \"./feature/button-feature.component\";\r\n\r\n@NgModule({\r\n    declarations: [ButtonComponent, ButtonFeatureComponent],\r\n    imports: [\r\n        CommonModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatBadgeModule,\r\n    ],\r\n    exports: [ButtonComponent, ButtonFeatureComponent]\r\n})\r\nexport class AppButtonModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ButtonFeatureComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ButtonFeatureComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppCardModule",
            "id": "module-AppCardModule-256945ff8a4113866f42cd81f234c9a844b34fdbfce2f0bb9344944fcc57b0d76409486ae88afa78b1f0ab915550574489aa8962a0b635e7a1b456266714b0d0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/components/card/card.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { CardUiModule } from \"./ui/card-ui.module\";\r\n\r\n@NgModule({\r\n    imports: [CardUiModule],\r\n    exports: [CardUiModule]\r\n})\r\nexport class AppCardModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CardUiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardUiModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppListModule",
            "id": "module-AppListModule-b3224d4d5d95807b412079432e18d78c59c9e346b62a7cd176f9ecf7dcee1b46c62769da1968eeeb5e59bb0c04113d01b9d68c0283d3511b9cbda681545c3d4c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/components/list/list.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { ListFeatureModule } from \"./feature/list-feature.module\";\r\n\r\n@NgModule({\r\n    imports: [ListFeatureModule],\r\n    exports: [ListFeatureModule]\r\n})\r\nexport class AppListModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ListFeatureModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ListFeatureModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-7fb69bbaf495e03d8c9795eb8da3acca537fca339b050117bb89702cd16d29144eedb53983752ef60d654ec52750ebe62378c73bf924c53eea472009c414747a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, isDevMode } from \"@angular/core\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { provideAnimationsAsync } from \"@angular/platform-browser/animations/async\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { RouterOutlet } from \"@angular/router\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\r\nimport { AppToolbarModule } from \"@root/components\";\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { appReducer } from \"./state/app.reducer\";\r\nimport { AppListModule } from \"../components/list/list.module\";\r\nimport { AppCardModule } from \"../components/card/card.module\";\r\nimport { provideHttpClient } from \"@angular/common/http\";\r\nimport { AppEffects } from \"./state/app.effects\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\"\r\nimport { ShoppingCartModule } from \"./shopping-cart/shopping-cart.module\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        RouterOutlet,\r\n        AppCardModule,\r\n        AppListModule,\r\n        AppToolbarModule,\r\n        ShoppingCartModule,\r\n        MatSidenavModule,\r\n        StoreModule.forRoot({ 'app-state': appReducer }, {}),\r\n        EffectsModule.forRoot(AppEffects),\r\n        StoreRouterConnectingModule.forRoot(),\r\n        StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: !isDevMode() }),\r\n    ],\r\n    bootstrap: [AppComponent],\r\n    providers: [\r\n        provideAnimationsAsync(),\r\n        provideHttpClient(),\r\n    ]\r\n})\r\nexport class AppModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppCardModule"
                        },
                        {
                            "name": "AppListModule"
                        },
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "AppToolbarModule"
                        },
                        {
                            "name": "RouterOutlet"
                        },
                        {
                            "name": "ShoppingCartModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-d7b12e7a805a455916e422fdd78f01b961884cb5df6a2e0a165b7dcaf74d083e75df48d3a740b95c61db1de879c62ef2121534b6e68cc02291d8e443f7857a81",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nexport const routes : Routes = [];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppToolbarModule",
            "id": "module-AppToolbarModule-97beabf334aa95b4afee3ab80ef3221e4b1478082d474ec4a4141a4c4f1a71dfa18f65f25f745b58e2457eb3b0db51000de20aa4d8a4edc9e5364b20a6eeba66",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/components/toolbar/toolbar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { ToolbarFeatureModule } from \"./feature/toolbar-feature.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        ToolbarFeatureModule\r\n    ],\r\n    exports: [ToolbarFeatureModule]\r\n})\r\nexport class AppToolbarModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ToolbarFeatureModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ToolbarFeatureModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CardFeatureModule",
            "id": "module-CardFeatureModule-aa52ffe7a39084fa77792f163f43e3ab0e381966f8f79fe07b6c0d191e10c988459362436a01be2f5ce28dd50ba8856fd7d6053cc980ad3486ea2cca71921085",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/components/card/feature/card-feature.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { CardUiModule } from \"../ui/card-ui.module\";\r\nimport { CardFeatureComponent } from \"./card-feature/card-feature.component\";\r\n\r\n@NgModule({\r\n    declarations: [CardFeatureComponent],\r\n    imports: [\r\n        CommonModule,\r\n        CardUiModule,\r\n    ],\r\n    exports: [CardFeatureComponent]\r\n})\r\nexport class CardFeatureModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardFeatureComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CardUiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardFeatureComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CardUiModule",
            "id": "module-CardUiModule-9127d38b5d288fb610a655d5a4ced818968261cb04f76a1755afbe18769eb782519c1600dff7c6d1e02becd7d152482308da18029ded7d3e77370d49ad57b6bb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/components/card/ui/card-ui.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { AppButtonModule } from '@root/components/button/button.module';\r\nimport { CardUiComponent } from './card-ui/card-ui.component';\r\n\r\n@NgModule({\r\n    declarations: [CardUiComponent],\r\n    imports: [\r\n        CommonModule,\r\n        MatCardModule,\r\n        AppButtonModule\r\n    ],\r\n    exports: [CardUiComponent]\r\n})\r\nexport class CardUiModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardUiComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardUiComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ListFeatureModule",
            "id": "module-ListFeatureModule-0c02c78a475c872fbd2acf1b8c69297dec6f58618b39b488f241038e299f7dfe4cf840c8166e561e2cfb97e4b82e6eed528bfda465cd4489e7d200537bf51787",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/components/list/feature/list-feature.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { ListFeatureComponent } from \"./list-feature/list-feature.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ListUiModule } from \"../ui/list-ui.module\";\r\n\r\n@NgModule({\r\n    declarations: [ListFeatureComponent],\r\n    imports: [\r\n        CommonModule,\r\n        ListUiModule,\r\n    ],\r\n    exports: [ListFeatureComponent]\r\n})\r\nexport class ListFeatureModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ListFeatureComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ListUiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ListFeatureComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ListUiModule",
            "id": "module-ListUiModule-0ddc5d07605073e22da1097619da96c667434c6818befa73876c1d92473be52e25cf2f4f5ec270c8c4613b45e17a468182cf14440d3e350e4d225a259a478b24",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/components/list/ui/list-ui.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { ListUiComponent } from \"./list-ui/list-ui.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { AppCardModule } from \"@components/card/card.module\";\r\nimport { MatGridListModule } from \"@angular/material/grid-list\";\r\nimport { GridColsDirective } from \"./grid-cols.directive\";\r\nimport { CardFeatureModule } from \"../../card/feature/card-feature.module\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ListUiComponent,GridColsDirective,],\r\n    imports: [\r\n    CommonModule,\r\n    MatGridListModule,\r\n    AppCardModule,\r\n    CardFeatureModule\r\n],\r\n    exports: [ListUiComponent]\r\n})\r\nexport class ListUiModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GridColsDirective"
                        },
                        {
                            "name": "ListUiComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppCardModule"
                        },
                        {
                            "name": "CardFeatureModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ListUiComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ShoppingCartFeatureModule",
            "id": "module-ShoppingCartFeatureModule-0e1b77add290d6be8062a731e88d007fa0faac69b15dd318ffbe7086a9fc4624d14c8769345cac3b22f4f825116cf41ac64bb14ad65f757a434e7d50888f0d21",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shopping-cart/feature/shopping-cart-feature.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { ShoppingCartFeatureComponent } from \"./shopping-cart-feature.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\n\r\n@NgModule({\r\n    declarations: [ShoppingCartFeatureComponent],\r\n    imports: [\r\n        CommonModule,\r\n        MatCardModule\r\n    ],\r\n    exports: [ShoppingCartFeatureComponent]\r\n})\r\nexport class ShoppingCartFeatureModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ShoppingCartFeatureComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ShoppingCartFeatureComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ShoppingCartModule",
            "id": "module-ShoppingCartModule-f1eab6ed536187610d3225d090202038752c6c0b8e5ce2cc7144b2e4e3f1a07b491c398b4140ecab90dbf4b102ac3a2d537544509b858997013ef85791e5af6a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shopping-cart/shopping-cart.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { SHOPPING_CART_FEATURE_KEY, shoppingCartReducer } from \"./state/shopping-cart.reducer\";\r\nimport { ShoppingCartUiModule } from \"./ui/shopping-cart-ui.module\";\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n        ShoppingCartUiModule,\r\n        StoreModule.forFeature(SHOPPING_CART_FEATURE_KEY, shoppingCartReducer)],\r\n    exports: [ShoppingCartUiModule],\r\n})\r\nexport class ShoppingCartModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ShoppingCartUiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ShoppingCartUiModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ShoppingCartUiModule",
            "id": "module-ShoppingCartUiModule-4668ad2fe05b3ed8c91d5f37f73551c96bc4aac9a6ba04cc53d29a8f80a26a40d685b4c827ab631274a8259ec1240b1cb287c3d13717b9c0b17ba463e0e52b10",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shopping-cart/ui/shopping-cart-ui.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { ShoppingCartUiComponent } from \"./shopping-cart-ui.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\n\r\n@NgModule({\r\n    declarations: [ShoppingCartUiComponent],\r\n    imports: [\r\n        CommonModule,\r\n        MatCardModule,\r\n        MatListModule\r\n    ],\r\n    exports: [ShoppingCartUiComponent],\r\n})\r\nexport class ShoppingCartUiModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ShoppingCartUiComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ShoppingCartUiComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ToolbarFeatureModule",
            "id": "module-ToolbarFeatureModule-9c188a5f0764e452aa120456fbfc9f880ec7004115731b8d772299eec90c861835f5cfb567f8c4fdf666266e0bc83a7126af96c79509cc03a215b02363977f73",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/components/toolbar/feature/toolbar-feature.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { ToolbarFeatureComponent } from \"./toolbar-feature.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ToolbarUiModule } from \"../ui/toolbar-ui.module\";\r\nimport { TOOLBAR_FEATURE_KEY, toolbarReducer } from \"../state/toolbar.reducer\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\n\r\n@NgModule({\r\n    declarations: [ToolbarFeatureComponent],\r\n    imports: [\r\n        CommonModule,\r\n        ToolbarUiModule,\r\n        StoreModule.forFeature(TOOLBAR_FEATURE_KEY, toolbarReducer),\r\n    ],\r\n    exports: [ToolbarFeatureComponent]\r\n})\r\nexport class ToolbarFeatureModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ToolbarFeatureComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ToolbarUiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ToolbarFeatureComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ToolbarUiModule",
            "id": "module-ToolbarUiModule-5edee9e52063bbfdc039653424be2ac040c47dcb4ec1204c8a36c08715547de63d0e8430782addf79a23f567f4d2cadaecdd66c4fe0555ba896e5e1ae9d4595b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/components/toolbar/ui/toolbar-ui.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { ToolbarUiComponent } from \"./toolbar-ui/toolbar-ui.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { AppButtonModule } from \"@components/button/button.module\";\r\n\r\n@NgModule({\r\n    declarations: [ToolbarUiComponent],\r\n    imports: [\r\n        CommonModule,\r\n        MatToolbarModule,\r\n        AppButtonModule\r\n    ],\r\n    exports: [ToolbarUiComponent]\r\n})\r\nexport class ToolbarUiModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ToolbarUiComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ToolbarUiComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "APP_STATE_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'app-state'"
            },
            {
                "name": "appReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n    on(categoriesObtained, (state, action) => ({\r\n        ...state,\r\n        categories: action.categorias\r\n    })),\r\n    on(menuButtonClicked, state => ({\r\n        ...state,\r\n        isMenuOpened: !state.isMenuOpened\r\n    })),\r\n    on(userProfileObtained, (state, action) =>({\r\n        ...state,\r\n        currentUserProfile: action.userProfile\r\n    })),\r\n    on(SecondaryToolbarActions.categoriaCargada, (state, action) => ({\r\n        ...state,\r\n        currentCategory: action.categoria\r\n    })),\r\n    on(shoppingCartButtonClicked, state => ({\r\n        ...state,\r\n        isShoppingCartOpened: !state.isShoppingCartOpened\r\n    })),\r\n    on(backdropClicked, state => ({\r\n        ...state,\r\n        isShoppingCartOpened: false\r\n    })),\r\n    on(ShoppingCartButtonClicked, state => ({\r\n        ...state,\r\n        shoppingCartCount: state.shoppingCartCount + 1,\r\n    })),\r\n)"
            },
            {
                "name": "backdropClicked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Drawer] - Backdrop clicked'\r\n)"
            },
            {
                "name": "categoriesObtained",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[App] - Categorias obtenidas',\r\n    props<{categorias: Categoria[]}>()\r\n)"
            },
            {
                "name": "DetailsButtonClicked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/card/state/card.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Item Card] - Details button clicked',\r\n    props<{itemId: string}>()\r\n)"
            },
            {
                "name": "getAppState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<AppState>(APP_STATE_KEY)"
            },
            {
                "name": "getCurrentCategory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    getAppState,\r\n    state => state.currentCategory\r\n)"
            },
            {
                "name": "getCurrentCategoryItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    getCurrentCategory,\r\n    cat => cat ? cat.items : []\r\n)"
            },
            {
                "name": "getCurrentCategoryName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    getCurrentCategory,\r\n    cat => cat ? cat.nombre : ''\r\n)"
            },
            {
                "name": "getCurrentUserProfile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    getAppState,\r\n    state => state.currentUserProfile\r\n)"
            },
            {
                "name": "getMenuOpened",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    getAppState,\r\n    state => state.isMenuOpened\r\n)"
            },
            {
                "name": "getShoppingCartCount",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    getAppState,\r\n    state => state.shoppingCartCount\r\n)"
            },
            {
                "name": "getShoppingCartOpened",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    getAppState,\r\n    state => state.isShoppingCartOpened\r\n)"
            },
            {
                "name": "InitApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[App] - Init App'\r\n)"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppState",
                "defaultValue": "{\r\n    categories: [],\r\n    isMenuOpened: true,\r\n    isShoppingCartOpened: false,\r\n    shoppingCartCount: 0,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "ShoppingCartAdapter.getInitialState({\r\n    total: 0\r\n})"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/toolbar/state/toolbar.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "toolbarAdapter.getInitialState()"
            },
            {
                "name": "MAIN_TOOLBAR_ID",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app-constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'app-main-toolbar'"
            },
            {
                "name": "menuButtonClicked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Main Toolbar] - Menu button clicked'\r\n)"
            },
            {
                "name": "pantsButtonClicked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Secondary toolbar] - Pants button clicked'\r\n)"
            },
            {
                "name": "profileButtonClicked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Main Toolbar] - Profile button clicked'\r\n)"
            },
            {
                "name": "reducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n    on(ShoppingCartButtonClicked, (state, action) => ({\r\n        ...ShoppingCartAdapter.addOne(action.item, state),\r\n        total: state.total + action.item.precio\r\n    }))\r\n)"
            },
            {
                "name": "reducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/toolbar/state/toolbar.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n    on(RegisterToolbar, (state, action) => ({\r\n        ...toolbarAdapter.addOne(action.toolbar, state)\r\n    }))\r\n)"
            },
            {
                "name": "RegisterToolbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/toolbar/state/toolbar.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Toolbar] - Register toolbar',\r\n    props<{toolbar: Toolbar}>()\r\n)"
            },
            {
                "name": "searchButtonClicked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Main Toolbar] - Search button clicked'\r\n)"
            },
            {
                "name": "SECONDARY_TOOLBAR_ID",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app-constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'app-secondary-toolbar'"
            },
            {
                "name": "SecondaryToolbarActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createActionGroup({\r\n    source: 'Secondary Toolbar',\r\n    events: {\r\n        ButtonClicked: props<{categoriaId: string}>(),\r\n        CategoriaCargada: props<{categoria: Categoria}>()\r\n    }\r\n})"
            },
            {
                "name": "selectAllItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    shoppingCartState,\r\n    shoppingCartAdapterSelectors.selectAll\r\n)"
            },
            {
                "name": "selectAllToolbars",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/toolbar/state/toolbar.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    toolbarState,\r\n    toolbarAdapterSelectors.selectAll\r\n)"
            },
            {
                "name": "selectItemsEntities",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    shoppingCartState,\r\n    shoppingCartAdapterSelectors.selectEntities\r\n)"
            },
            {
                "name": "selectItemsIds",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    shoppingCartState,\r\n    shoppingCartAdapterSelectors.selectIds\r\n)"
            },
            {
                "name": "selectMontoTotal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    shoppingCartState,\r\n    state => state.total\r\n)"
            },
            {
                "name": "selectToolbarEntities",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/toolbar/state/toolbar.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    toolbarState,\r\n    toolbarAdapterSelectors.selectEntities\r\n)"
            },
            {
                "name": "selectToolbarIds",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/toolbar/state/toolbar.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    toolbarState,\r\n    toolbarAdapterSelectors.selectIds\r\n)"
            },
            {
                "name": "SHOPPING_CART_FEATURE_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'shopping-cart'"
            },
            {
                "name": "ShoppingCartAdapter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EntityAdapter<Item>",
                "defaultValue": "createEntityAdapter<Item>({\r\n    selectId: selectById,\r\n    sortComparer: sortById\r\n})"
            },
            {
                "name": "shoppingCartAdapterSelectors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "ShoppingCartAdapter.getSelectors()"
            },
            {
                "name": "shoppingCartButtonClicked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Main Toolbar] - Shopping cart button clicked'\r\n)"
            },
            {
                "name": "ShoppingCartButtonClicked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/card/state/card.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Item Card] - Shopping cart button clicked',\r\n    props<{item: Item}>()\r\n)"
            },
            {
                "name": "shoppingCartState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<ShoppingCartState>(SHOPPING_CART_FEATURE_KEY)"
            },
            {
                "name": "TOOLBAR_FEATURE_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/toolbar/state/toolbar.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'toolbars'"
            },
            {
                "name": "toolbarAdapter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/toolbar/state/toolbar.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EntityAdapter<Toolbar>",
                "defaultValue": "createEntityAdapter<Toolbar> ({\r\n    selectId: selectById,\r\n    sortComparer: sortById\r\n})"
            },
            {
                "name": "toolbarAdapterSelectors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/toolbar/state/toolbar.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "toolbarAdapter.getSelectors()"
            },
            {
                "name": "toolbarState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/toolbar/state/toolbar.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<ToolbarState>(TOOLBAR_FEATURE_KEY)"
            },
            {
                "name": "tShirtsButtonClicked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Secondary toolbar] - T-Shirts button clicked'\r\n)"
            },
            {
                "name": "userProfileObtained",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Identity] - User profile obtained',\r\n    props<{userProfile: UserProfile}>()\r\n)"
            }
        ],
        "functions": [
            {
                "name": "reducer",
                "file": "src/app/state/app.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "AppState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "AppState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "selectById",
                "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "a",
                        "type": "Item",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "a",
                        "type": "Item",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "selectById",
                "file": "src/components/toolbar/state/toolbar.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "a",
                        "type": "Toolbar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "a",
                        "type": "Toolbar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "shoppingCartReducer",
                "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "ShoppingCartState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "ShoppingCartState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "sortById",
                "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "a",
                        "type": "Item",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "type": "Item",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "type": "Item",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "type": "Item",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "sortById",
                "file": "src/components/toolbar/state/toolbar.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "a",
                        "type": "Toolbar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "type": "Toolbar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "type": "Toolbar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "type": "Toolbar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "toolbarReducer",
                "file": "src/components/toolbar/state/toolbar.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "ToolbarState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "ToolbarState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/state/app.reducer.ts": [
                {
                    "name": "APP_STATE_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'app-state'"
                },
                {
                    "name": "appReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n    on(categoriesObtained, (state, action) => ({\r\n        ...state,\r\n        categories: action.categorias\r\n    })),\r\n    on(menuButtonClicked, state => ({\r\n        ...state,\r\n        isMenuOpened: !state.isMenuOpened\r\n    })),\r\n    on(userProfileObtained, (state, action) =>({\r\n        ...state,\r\n        currentUserProfile: action.userProfile\r\n    })),\r\n    on(SecondaryToolbarActions.categoriaCargada, (state, action) => ({\r\n        ...state,\r\n        currentCategory: action.categoria\r\n    })),\r\n    on(shoppingCartButtonClicked, state => ({\r\n        ...state,\r\n        isShoppingCartOpened: !state.isShoppingCartOpened\r\n    })),\r\n    on(backdropClicked, state => ({\r\n        ...state,\r\n        isShoppingCartOpened: false\r\n    })),\r\n    on(ShoppingCartButtonClicked, state => ({\r\n        ...state,\r\n        shoppingCartCount: state.shoppingCartCount + 1,\r\n    })),\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppState",
                    "defaultValue": "{\r\n    categories: [],\r\n    isMenuOpened: true,\r\n    isShoppingCartOpened: false,\r\n    shoppingCartCount: 0,\r\n}"
                }
            ],
            "src/app/state/app.actions.ts": [
                {
                    "name": "backdropClicked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Drawer] - Backdrop clicked'\r\n)"
                },
                {
                    "name": "categoriesObtained",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[App] - Categorias obtenidas',\r\n    props<{categorias: Categoria[]}>()\r\n)"
                },
                {
                    "name": "InitApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[App] - Init App'\r\n)"
                },
                {
                    "name": "menuButtonClicked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Main Toolbar] - Menu button clicked'\r\n)"
                },
                {
                    "name": "pantsButtonClicked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Secondary toolbar] - Pants button clicked'\r\n)"
                },
                {
                    "name": "profileButtonClicked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Main Toolbar] - Profile button clicked'\r\n)"
                },
                {
                    "name": "searchButtonClicked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Main Toolbar] - Search button clicked'\r\n)"
                },
                {
                    "name": "SecondaryToolbarActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createActionGroup({\r\n    source: 'Secondary Toolbar',\r\n    events: {\r\n        ButtonClicked: props<{categoriaId: string}>(),\r\n        CategoriaCargada: props<{categoria: Categoria}>()\r\n    }\r\n})"
                },
                {
                    "name": "shoppingCartButtonClicked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Main Toolbar] - Shopping cart button clicked'\r\n)"
                },
                {
                    "name": "tShirtsButtonClicked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Secondary toolbar] - T-Shirts button clicked'\r\n)"
                },
                {
                    "name": "userProfileObtained",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Identity] - User profile obtained',\r\n    props<{userProfile: UserProfile}>()\r\n)"
                }
            ],
            "src/components/card/state/card.actions.ts": [
                {
                    "name": "DetailsButtonClicked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/card/state/card.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Item Card] - Details button clicked',\r\n    props<{itemId: string}>()\r\n)"
                },
                {
                    "name": "ShoppingCartButtonClicked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/card/state/card.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Item Card] - Shopping cart button clicked',\r\n    props<{item: Item}>()\r\n)"
                }
            ],
            "src/app/state/app.selectors.ts": [
                {
                    "name": "getAppState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<AppState>(APP_STATE_KEY)"
                },
                {
                    "name": "getCurrentCategory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    getAppState,\r\n    state => state.currentCategory\r\n)"
                },
                {
                    "name": "getCurrentCategoryItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    getCurrentCategory,\r\n    cat => cat ? cat.items : []\r\n)"
                },
                {
                    "name": "getCurrentCategoryName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    getCurrentCategory,\r\n    cat => cat ? cat.nombre : ''\r\n)"
                },
                {
                    "name": "getCurrentUserProfile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    getAppState,\r\n    state => state.currentUserProfile\r\n)"
                },
                {
                    "name": "getMenuOpened",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    getAppState,\r\n    state => state.isMenuOpened\r\n)"
                },
                {
                    "name": "getShoppingCartCount",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    getAppState,\r\n    state => state.shoppingCartCount\r\n)"
                },
                {
                    "name": "getShoppingCartOpened",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    getAppState,\r\n    state => state.isShoppingCartOpened\r\n)"
                }
            ],
            "src/app/shopping-cart/state/shopping-cart.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "ShoppingCartAdapter.getInitialState({\r\n    total: 0\r\n})"
                },
                {
                    "name": "reducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n    on(ShoppingCartButtonClicked, (state, action) => ({\r\n        ...ShoppingCartAdapter.addOne(action.item, state),\r\n        total: state.total + action.item.precio\r\n    }))\r\n)"
                },
                {
                    "name": "SHOPPING_CART_FEATURE_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'shopping-cart'"
                },
                {
                    "name": "ShoppingCartAdapter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EntityAdapter<Item>",
                    "defaultValue": "createEntityAdapter<Item>({\r\n    selectId: selectById,\r\n    sortComparer: sortById\r\n})"
                }
            ],
            "src/components/toolbar/state/toolbar.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/toolbar/state/toolbar.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "toolbarAdapter.getInitialState()"
                },
                {
                    "name": "reducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/toolbar/state/toolbar.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n    on(RegisterToolbar, (state, action) => ({\r\n        ...toolbarAdapter.addOne(action.toolbar, state)\r\n    }))\r\n)"
                },
                {
                    "name": "TOOLBAR_FEATURE_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/toolbar/state/toolbar.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'toolbars'"
                },
                {
                    "name": "toolbarAdapter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/toolbar/state/toolbar.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EntityAdapter<Toolbar>",
                    "defaultValue": "createEntityAdapter<Toolbar> ({\r\n    selectId: selectById,\r\n    sortComparer: sortById\r\n})"
                }
            ],
            "src/app/app-constants.ts": [
                {
                    "name": "MAIN_TOOLBAR_ID",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app-constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'app-main-toolbar'"
                },
                {
                    "name": "SECONDARY_TOOLBAR_ID",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app-constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'app-secondary-toolbar'"
                }
            ],
            "src/components/toolbar/state/toolbar.actions.ts": [
                {
                    "name": "RegisterToolbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/toolbar/state/toolbar.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Toolbar] - Register toolbar',\r\n    props<{toolbar: Toolbar}>()\r\n)"
                }
            ],
            "src/app/shopping-cart/state/shopping-cart.selector.ts": [
                {
                    "name": "selectAllItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    shoppingCartState,\r\n    shoppingCartAdapterSelectors.selectAll\r\n)"
                },
                {
                    "name": "selectItemsEntities",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    shoppingCartState,\r\n    shoppingCartAdapterSelectors.selectEntities\r\n)"
                },
                {
                    "name": "selectItemsIds",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    shoppingCartState,\r\n    shoppingCartAdapterSelectors.selectIds\r\n)"
                },
                {
                    "name": "selectMontoTotal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    shoppingCartState,\r\n    state => state.total\r\n)"
                },
                {
                    "name": "shoppingCartAdapterSelectors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "ShoppingCartAdapter.getSelectors()"
                },
                {
                    "name": "shoppingCartState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<ShoppingCartState>(SHOPPING_CART_FEATURE_KEY)"
                }
            ],
            "src/components/toolbar/state/toolbar.selectors.ts": [
                {
                    "name": "selectAllToolbars",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/toolbar/state/toolbar.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    toolbarState,\r\n    toolbarAdapterSelectors.selectAll\r\n)"
                },
                {
                    "name": "selectToolbarEntities",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/toolbar/state/toolbar.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    toolbarState,\r\n    toolbarAdapterSelectors.selectEntities\r\n)"
                },
                {
                    "name": "selectToolbarIds",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/toolbar/state/toolbar.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    toolbarState,\r\n    toolbarAdapterSelectors.selectIds\r\n)"
                },
                {
                    "name": "toolbarAdapterSelectors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/toolbar/state/toolbar.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "toolbarAdapter.getSelectors()"
                },
                {
                    "name": "toolbarState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/toolbar/state/toolbar.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<ToolbarState>(TOOLBAR_FEATURE_KEY)"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/state/app.reducer.ts": [
                {
                    "name": "reducer",
                    "file": "src/app/state/app.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "AppState",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "AppState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shopping-cart/state/shopping-cart.reducer.ts": [
                {
                    "name": "selectById",
                    "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "a",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "shoppingCartReducer",
                    "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "ShoppingCartState",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "ShoppingCartState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sortById",
                    "file": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "a",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/components/toolbar/state/toolbar.reducer.ts": [
                {
                    "name": "selectById",
                    "file": "src/components/toolbar/state/toolbar.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "a",
                            "type": "Toolbar",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "Toolbar",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sortById",
                    "file": "src/components/toolbar/state/toolbar.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "a",
                            "type": "Toolbar",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "type": "Toolbar",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "Toolbar",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "type": "Toolbar",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toolbarReducer",
                    "file": "src/components/toolbar/state/toolbar.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "ToolbarState",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "ToolbarState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app-constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MAIN_TOOLBAR_ID",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app-constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SECONDARY_TOOLBAR_ID",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/app.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppService",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/identity/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserProfile",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/feature/shopping-cart-feature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShoppingCartFeatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/shopping-cart.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ShoppingCartService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ShoppingCartPartialState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ShoppingCartState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "selectById",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "shoppingCartReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "sortById",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SHOPPING_CART_FEATURE_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ShoppingCartAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAllItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectItemsEntities",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectItemsIds",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectMontoTotal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "shoppingCartAdapterSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/state/shopping-cart.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "shoppingCartState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shopping-cart/ui/shopping-cart-ui.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShoppingCartUiComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "backdropClicked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "categoriesObtained",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InitApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "menuButtonClicked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pantsButtonClicked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "profileButtonClicked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "searchButtonClicked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondaryToolbarActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "shoppingCartButtonClicked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tShirtsButtonClicked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userProfileObtained",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppEffects",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppPartialState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "reducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "APP_STATE_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getAppState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCurrentCategory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCurrentCategoryItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCurrentCategoryName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCurrentUserProfile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getMenuOpened",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getShoppingCartCount",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getShoppingCartOpened",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/web-api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WebApiService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/components/button/feature/button-feature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonFeatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/components/card/feature/card-feature/card-feature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardFeatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/components/card/state/card.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DetailsButtonClicked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/card/state/card.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ShoppingCartButtonClicked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/card/ui/card-ui/card-ui.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardUiComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/components/list/feature/list-feature/list-feature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListFeatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/components/list/services/list.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ListService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/components/list/ui/grid-cols.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "GridColsDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/components/list/ui/grid-cols.directive.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GridColumns",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/components/list/ui/list-ui/list-ui.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListUiComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/components/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/components/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Categoria",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/components/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CrearCategoria",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/components/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Item",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/components/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Toolbar",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/components/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ToolbarConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/feature/toolbar-feature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToolbarFeatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RegisterToolbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ToolbarPartialState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ToolbarState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "selectById",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "sortById",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "toolbarReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TOOLBAR_FEATURE_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toolbarAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAllToolbars",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectToolbarEntities",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectToolbarIds",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toolbarAdapterSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/state/toolbar.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toolbarState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/toolbar/ui/toolbar-ui/toolbar-ui.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToolbarUiComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            }
        ]
    }
}